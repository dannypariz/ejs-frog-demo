name: "froghome"

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: vuln-ejs
      IMAGE_TAG: ${{ github.run_number }}
      DOCKER_REPO: danny-docker-virtual
      BUILD_NAME: froghome
      BUILD_NUMBER: ${{ github.run_number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure npm for Artifactory
        run: |
          jf npm-config --global=true \
            --repo-resolve=tutorial-npm \
            --repo-deploy=tutorial-npm

      - name: Install npm Dependencies
        run: jf npm install

      - name: Publish npm Package to Artifactory
        run: jf npm publish

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg JF_TOKEN=${{ secrets.JF_ACCESS_TOKEN }} \
            -t ${{ vars.JF_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Attach and Push Docker Image with Build Info
        run: |
          jf rt build-collect-env
          jf rt build-add-git

          # Attach npm artifact
          jf rt bp $BUILD_NAME $BUILD_NUMBER

          # Push Docker image with build info
          jf rt docker-push \
            ${{ vars.JF_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            $DOCKER_REPO \
            --build-name=$BUILD_NAME \
            --build-number=$BUILD_NUMBER

      - name: Scan Build with Xray
        run: jf bs $BUILD_NAME $BUILD_NUMBER --vuln --fail=false
